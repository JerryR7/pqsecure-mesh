services:
  pqsecure-controller:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pqsecure-controller
    ports:
      - "8080:8080"  # REST API
    volumes:
      - pqsecure_data:/app/data
      - ./config:/app/config
    environment:
      - PQSM__GENERAL__MODE=controller
      - PQSM__GENERAL__LOG_LEVEL=debug
      - PQSM__CERT__CA_TYPE=smallstep
      - PQSM__CERT__CA_URL=http://step-ca:9000
      - PQSM__IDENTITY__TENANT=default
      - PQSM__IDENTITY__SERVICE=controller
      - PQSM__TELEMETRY__ENABLE_METRICS=true
      - PQSM__TELEMETRY__METRICS_PORT=9091
    networks:
      - pqsecure-network
    depends_on:
      - step-ca

  service-a-sidecar:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: service-a-sidecar
    ports:
      - "9090:9090"  # Proxy
      - "9081:9091"  # Metrics
    volumes:
      - pqsecure_data:/app/data
      - ./config:/app/config
    environment:
      - PQSM__GENERAL__MODE=sidecar
      - PQSM__GENERAL__LOG_LEVEL=debug
      - PQSM__CERT__CA_TYPE=smallstep
      - PQSM__CERT__CA_URL=http://step-ca:9000
      - PQSM__IDENTITY__TENANT=default
      - PQSM__IDENTITY__SERVICE=service-a
      - PQSM__PROXY__LISTEN_ADDR=0.0.0.0
      - PQSM__PROXY__LISTEN_PORT=9090
      - PQSM__PROXY__UPSTREAM_ADDR=service-a
      - PQSM__PROXY__UPSTREAM_PORT=80
      - PQSM__PROXY__PROTOCOL=http
      - PQSM__TELEMETRY__ENABLE_METRICS=true
      - PQSM__TELEMETRY__METRICS_PORT=9091
    networks:
      - pqsecure-network
    depends_on:
      - step-ca
      - service-a

  service-b-sidecar:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: service-b-sidecar
    ports:
      - "9091:9090"  # Proxy
      - "9082:9091"  # Metrics
    volumes:
      - pqsecure_data:/app/data
      - ./config:/app/config
    environment:
      - PQSM__GENERAL__MODE=sidecar
      - PQSM__GENERAL__LOG_LEVEL=debug
      - PQSM__CERT__CA_TYPE=smallstep
      - PQSM__CERT__CA_URL=http://step-ca:9000
      - PQSM__IDENTITY__TENANT=default
      - PQSM__IDENTITY__SERVICE=service-b
      - PQSM__PROXY__LISTEN_ADDR=0.0.0.0
      - PQSM__PROXY__LISTEN_PORT=9090
      - PQSM__PROXY__UPSTREAM_ADDR=service-b
      - PQSM__PROXY__UPSTREAM_PORT=80
      - PQSM__PROXY__PROTOCOL=http
      - PQSM__TELEMETRY__ENABLE_METRICS=true
      - PQSM__TELEMETRY__METRICS_PORT=9091
    networks:
      - pqsecure-network
    depends_on:
      - step-ca
      - service-b

  step-ca:
    image: smallstep/step-ca:latest
    container_name: step-ca
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - step_ca_data:/home/step
    environment:
      - DOCKER_STEPCA_INIT_NAME=PQSecure Mesh CA
      - DOCKER_STEPCA_INIT_DNS_NAMES=localhost,step-ca
      - DOCKER_STEPCA_INIT_PROVISIONER_NAME=admin
    networks:
      - pqsecure-network

  # Test microservice A
  service-a:
    image: nginx:alpine
    container_name: service-a
    networks:
      - pqsecure-network
    volumes:
      - ./test/service-a:/usr/share/nginx/html

  # Test microservice B
  service-b:
    image: nginx:alpine
    container_name: service-b
    networks:
      - pqsecure-network
    volumes:
      - ./test/service-b:/usr/share/nginx/html

  # Monitoring service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - pqsecure-network

  # Monitoring dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - pqsecure-network
    depends_on:
      - prometheus

volumes:
  pqsecure_data:
  step_ca_data:
  prometheus_data:
  grafana_data:

networks:
  pqsecure-network:
    driver: bridge